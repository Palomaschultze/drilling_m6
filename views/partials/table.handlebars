{{!--Tabla donde se muestran los anime--}}
<div class="container py-5 text-center mx-auto">
    <section>
        <h2 class="text-center text-light mx-auto my-5">Listado de Todos los Animes</h2>
        <div id="tabla">
            <table class="table table-light table-striped">
                <thead>
                    <tr>
                        <th scope="col">Index</th>
                        <th scope="col">Nombre</th>
                        <th scope="col">Género</th>
                        <th scope="col">Año</th>
                        <th scope="col">Autor</th>
                        <th scope="col">Detalles</th>
                        <th scope="col">Modificar</th>
                        <th scope="col">Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    {{#each data}}
                    <tr class="fw-bold text-center">
                        <th scope="row" class="text-dark fw-bold">{{this.id}}</th>
                        <td class="text-dark text-start">{{this.nombre}}</td>
                        <td class="text-dark">{{this.genero}}</td>
                        <td class="text-dark">{{this.año}}</td>
                        <td class="text-dark">{{this.autor}}</td>
                        <td><a class="btn detailBtn" href="/animes/{{this.id}}">Detalles</a></td>
                        <td><a class="btn updateBtn" href="#form">Modificar</a></td>
                        <td><button class="btn deleteBtn">Eliminar</button></td>
                    </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
    </section>
</div>

{{!--Boton para crear un nuevo anime--}}
<div class="text-center pb-5">
    <a href="#form">
        <button type="submit" id="formShow" class="btn my-2">Agrega un nuevo anime</button>
    </a>
</div>



<script>
    //Query selectors para almacenar los grupos de botones
    const updateBtn = document.querySelectorAll(".updateBtn");
    const deleteBtn = document.querySelectorAll(".deleteBtn");
    const detailBtn = document.querySelectorAll(".detailBtn");

    //Variable donde se guarda el id capturado por los botones delete, actualizar y detalles
    let id;

    //Muestra el formulario y oculta botones
    formShow.addEventListener('click', () => {
        form.classList.replace("d-none", "d-block");
        formShow.classList.replace("d-block", "d-none");
        updateForm.classList.replace("d-block", "d-none");
        createForm.classList.replace("d-none", "d-block");
        formCreateUser.reset()

    })

    // capturamos todos los botones actualizar y capturamos la data de su fila
    for (let i = 0; i < updateBtn.length; i++) {
        updateBtn[i].addEventListener("click", (event) => {

            form.classList.replace("d-none", "d-block");
            createForm.classList.replace("d-block", "d-none");
            updateForm.classList.replace("d-none", "d-block");
            formShow.classList.replace("d-none", "d-block");

            let path = event.srcElement.offsetParent.nextSibling.parentElement.cells

            id = path[0].innerText;
            createNombre.value = path[1].innerText;
            createGenero.value = path[2].innerText;
            createAño.value = path[3].innerText;
            createAutor.value = path[4].innerText;
        });
    }

    // capturamos todos los botones eliminar y eliminamos el valor correspondiente
    for (let i = 0; i < deleteBtn.length; i++) {
        deleteBtn[i].addEventListener("click", (event) => {
            let path = event.srcElement.offsetParent.nextSibling.parentElement.cells;
            let id = path[0].innerText;

            var requestOptions = {
                method: 'DELETE',
                redirect: 'follow'
            };
            fetch("http://localhost:3000/animes/" + id, requestOptions)
                .then(response => {
                    if (response.status === 200) {
                        return response.json();
                    } else {
                        throw new Error("Error al eliminar");
                    }
                })
                .then(result => {
                    alert(result.message);
                    location.reload();
                })
                .catch(error => {
                    console.error(error.message);
                });
        });
    };


    // capturamos todos los botones para ver Detalles
    for (let i = 0; i < detailBtn.length; i++) {
        detailBtn[i].addEventListener("click", (event) => {
            console.log('hola detalle')

            let path = event.srcElement.offsetParent.nextSibling.parentElement.cells
            let id = path[0].innerText;

            var requestOptions = {
                method: 'GET',
                redirect: 'follow'
            };

            fetch(`http://localhost:3000/animes/${id}`, requestOptions)
                .then(response => response.json())
                .then(result => console.log(result))
                .catch(error => console.log('error', error));
        });
    }

</script>


<style>
    .table {
        box-shadow: 7px 7px 5px 0px rgb(172, 171, 171);
        -webkit-box-shadow: 7px 7px 5px 0px rgb(167, 166, 166);
        -moz-box-shadow: 7px 7px 5px 0px rgb(155, 154, 154);
    }

    .detailBtn {
        background-color: #BFFFBF;
    }

    .updateBtn {
        background-color: #B3D9FF;
    }

    .deleteBtn {
        background-color: #FFB3BB;

    }

    #formShow {
        background-color: rgb(226, 55, 140);
        color: white;
    }

    #formShow:hover {
        background-color: rgb(228, 145, 186);
        color: black;
    }


    @media(max-width: 778px) {
        #tabla {
            overflow-x: scroll;
            width: 500px;
        }
    }

    @media(max-width: 630px) {
        #tabla {
            overflow-x: scroll;
            width: 400px;
        }
    }
</style>